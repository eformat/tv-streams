#
quarkus.log.console.enable=true
quarkus.log.console.level=INFO
# sets the consumer group id
quarkus.kafka-streams.application-id=${APP_ID}
# output name based on simple key (route_id)
# trip - complex key ("%s-%s-%s-%s-%s", route_id(), route_type(), direction_id(), run_id(), stop_id())
# route|trip
streams.aggregate.key.name=${KEY_NAME}
# source topic
streams.aggregate.source.topic=${SOURCE_TOPIC}
# aggregation window in minutes
streams.aggregate.window.minutes=${WINDOW_MINUTES}

%dev.kafka.bootstrap.servers=localhost:9092
%dev.quarkus.kafka-streams.bootstrap-servers=localhost:9092
%dev.quarkus.kafka-streams.application-server=${hostname}:8080

%prod.kafka.bootstrap.servers=tv-cluster-kafka-bootstrap:9092
%prod.quarkus.kafka-streams.bootstrap-servers=tv-cluster-kafka-bootstrap:9092
%prod.quarkus.kafka-streams.application-server=0.0.0.0:8080

quarkus.kafka-streams.topics=tripvibe

# pass-through options
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=earliest
kafka-streams.metrics.recording.level=DEBUG

